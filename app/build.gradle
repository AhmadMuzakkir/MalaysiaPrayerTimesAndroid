import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

def STRING = "String"
def GIT_SHA = "GIT_SHA"
def BUILD_TIME = "BUILD_TIME"

def gitSha() {
    def gitpath = "git"
    def Properties localProps = new Properties()
    def localPropsFile = rootProject.file('local.properties')

    try {
        def localGitPath
        localProps.load(new FileInputStream(localPropsFile))
        localGitPath = localProps['GIT_PATH']
        if (localGitPath != null && !localGitPath.toString().isEmpty()) gitpath = localGitPath
    } catch (FileNotFoundException ignored) { }

    String ex = gitpath + ' rev-parse --short HEAD'
    return ex.execute().text.trim()
}

def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.i906.mpt"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 3979
        versionName "2.0.0"

        buildConfigField STRING, GIT_SHA, "\"${ gitSha() }\""
        buildConfigField STRING, BUILD_TIME, "\"${ buildTime() }\""
    }

    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {

        debug {
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            ext.enableCrashlytics = false
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def finalName = "mpt-" + variant.versionName + "-" + variant.buildType.name + ".apk";
                output.outputFile = new File(output.outputFile.parent, finalName)
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // MPT Extension
    compile project(':mpt-extension:extension')

    // Android Support Libraries
    compile libraries.appCompat
    compile libraries.cardView
    compile libraries.recyclerView

    // View Injection
    compile libraries.butterknife

    // Logging
    compile libraries.timber

    // Dependency Injection
    compile libraries.dagger
    apt libraries.daggerCompiler
    provided libraries.javaAnnotations

    // HTTP Libraries
    compile libraries.gson
    compile libraries.okhttp
    compile libraries.retrofit
    compile libraries.retrofitGsonConverter
    compile libraries.retrofitRxJavaAdapter

    // Play Services
    compile 'com.google.android.gms:play-services-location:8.1.0'

    // UI Libraries
    compile 'com.github.frankiesardo:linearlistview:1.0.1@aar'
    compile 'com.github.castorflex.smoothprogressbar:library-circular:1.1.0'

    // Rx
    compile libraries.rxJava
    compile libraries.rxAndroid
    compile 'pl.charmas.android:android-reactive-location:0.8@aar'

    // Database
    compile libraries.storioSqlite
    compile libraries.storioContentResolver

    // Memory Leak Detector
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // Others
    compile 'com.opencsv:opencsv:3.4'
    compile 'net.danlew:android.joda:2.8.2'
}
